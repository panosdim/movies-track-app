server:
    port: 0
spring:
    application:
        name: movie-service
    datasource:
        url: ${DB_URL}
        username: ${DB_USER}
        password: ${DB_PASSWORD}
        driver-class-name: org.postgresql.Driver
    jpa:
        hibernate:
            ddl-auto: update
        show-sql: true
        properties:
            hibernate:
                dialect: org.hibernate.dialect.PostgreSQLDialect
    kafka:
        bootstrap-servers: ${KAFKA_BROKERS}
        producer:
            key-serializer: org.apache.kafka.common.serialization.StringSerializer
            value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
            properties:
                '[spring.json.add.type.headers]': true
# Topic name
movie:
    events:
        topic: movie-events
eureka:
    client:
        serviceUrl:
            defaultZone: http://eureka:8761/eureka/
        register-with-eureka: true
        fetch-registry: true
    instance:
        instance-id: ${spring.application.name}:${random.value}
        lease-renewal-interval-in-seconds: 5
        lease-expiration-duration-in-seconds: 15
        prefer-ip-address: true
jwt:
    secret: ${JWT_SECRET}

---
spring:
    config:
        activate:
            on-profile: local
    kafka:
        bootstrap-servers: localhost:9092
    datasource:
        url: jdbc:postgresql://localhost:5432/moviedb
        username: postgres
        password: postgres
eureka:
    client:
        serviceUrl:
            defaultZone: http://localhost:8761/eureka/
jwt:
    secret: ak1PT09hbmlPdXZoaUVWUjRudXd6K0FHZHFBbUhIbFYvZUZEYUhzRTFzcXNoZEJCeGVYK1NFNW96T1RQQUVnSwpIc0F3R0VXMGFLRVQ0TmxiK2dXdkRRPT0=
